/*!
 * Library: singulum
 * Description: State management sanity with minimal effort
 * Author: planttheidea
 * Version: 0.4.0
 * License: MIT
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("singulum", [], factory);
	else if(typeof exports === 'object')
		exports["singulum"] = factory();
	else
		root["singulum"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Singulum = __webpack_require__(2);\n\nvar _Singulum2 = _interopRequireDefault(_Singulum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = new _Singulum2.default();\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvaW5kZXguanM/MWZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2luZ3VsdW0gZnJvbSAnLi9TaW5ndWx1bSc7XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBTaW5ndWx1bSgpO1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9pbmRleC5qc1xuICoqLyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar OBJECT_ASSIGN = Object.assign;\n\nvar namespaceIncrementer = 0;\n\n/**\n * Assigns new result to store, fires listener with new SingulumStore, and returns\n * Promise with new result\n *\n * @param {Object} object\n * @param {string} key\n * @param {*} result\n * @returns {Promise}\n */\nvar updateStoreValue = function updateStoreValue(object, result, key) {\n    /**\n     * Apply new result value to the store, scoped if the key is provided\n     */\n    if (key) {\n        object.$$store[key] = result;\n    } else {\n        object.$$store = result;\n    }\n\n    /**\n     * If there is a watcher, fire it\n     */\n    if ((0, _utils.isFunction)(object.$$watcher)) {\n        object.$$watcher(object.store);\n    }\n\n    return result;\n};\n\n/**\n * Creates bound and wrapped function to store new value internally and invoke listener\n * If function is asyncronous, it waits for the promise to be resolved before firing\n *\n * @param {Object} thisArg\n * @param {Function} fn\n * @param {string} key\n * @return {Function}\n */\nvar createWrapperFunction = function createWrapperFunction(thisArg, fn, key) {\n    return (0, _utils.bindFunction)(function () {\n        var _this = this;\n\n        var result = fn.apply(undefined, arguments);\n\n        /**\n         * If the result is a Promise, wait for resolution and then return the data\n         */\n        if (result.then) {\n            return result.then(function (resultValue) {\n                return updateStoreValue(_this, resultValue, key);\n            });\n        }\n\n        /**\n         * Otherwise, wrap the return data in a native Promise and return it\n         */\n        return Promise.resolve(updateStoreValue(this, result, key));\n    }, thisArg);\n};\n\n/**\n * Creates namespaced Singulum within the object, aka make a branch\n *\n * @param {Object} object\n * @param {string} namespace\n * @param {Object} actions\n * @param {Object} initialValues\n * @returns {Object}\n */\nvar createNewSingulumNamespace = function createNewSingulumNamespace(object, namespace) {\n    var actions = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n    var initialValues = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n    /**\n     * if no namespace is provided, use the simple counter to create a unique entry\n     */\n    if (!namespace) {\n        namespace = namespaceIncrementer;\n        namespaceIncrementer++;\n    }\n\n    (0, _utils.setReadonly)(object, namespace, new Singulum(actions, initialValues));\n\n    object.$$store[namespace] = object[namespace];\n\n    return object[namespace];\n};\n\n/**\n * Creates new item in the store, and creates related action with wrapper\n *\n * @param {Object} branch\n * @param {Object} actions\n * @param {Object} initialValues\n */\nvar createNewSingulumLeaves = function createNewSingulumLeaves(branch) {\n    var actions = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var initialValues = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    (0, _utils.forEachObject)(initialValues, function (initialValue, storeKey) {\n        /**\n         * Create separate clones for initialValues and store, so that references between\n         * the two do not exist\n         */\n        branch.$$initialValues[storeKey] = (0, _utils.getClone)(initialValue, SingulumStore);\n        branch.$$store[storeKey] = (0, _utils.getClone)(initialValue, SingulumStore);\n    });\n\n    (0, _utils.forEachObject)(actions, function (action, actionKey) {\n        /**\n         * if action is a function, then it applies to the entire state\n         */\n        if ((0, _utils.isFunction)(action)) {\n            branch.$$actions[actionKey] = createWrapperFunction(branch, action);\n        } else if ((0, _utils.isObject)(action)) {\n            /**\n             * if action is a map of functions, it applies to a specific key on the store\n             */\n            (0, _utils.forEachObject)(action, function (actionFn, actionFnKey) {\n                branch.$$actions[actionFnKey] = createWrapperFunction(branch, actionFn, actionKey);\n            });\n        }\n    });\n};\n\n/**\n * Actions class provided with [branchName].actions\n */\n\nvar SingulumActions =\n/**\n * Create shallow clone of internal actions, and freeze\n *\n * @param {Object} actions\n * @returns {Object}\n */\nfunction SingulumActions() {\n    var actions = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    _classCallCheck(this, SingulumActions);\n\n    OBJECT_ASSIGN(this, actions);\n\n    return this;\n};\n\n/**\n * Store class provided with [branchName].store\n */\n\n\nvar SingulumStore =\n/**\n * Create shallow clone of store, including stores branched from it, and freeze\n *\n * @param {Object} store\n * @returns {Object}\n */\nfunction SingulumStore() {\n    var _this2 = this;\n\n    var store = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    _classCallCheck(this, SingulumStore);\n\n    (0, _utils.forEachObject)(store, function (value, key) {\n        _this2[key] = (0, _utils.isInstanceOf)(value, Singulum) ? value.store : value;\n    });\n\n    return this;\n};\n\n/**\n * Snapshot class provided with [branchName].snapshot();\n */\n\n\nvar SingulumSnapshot =\n/**\n * Create snapshot clone of store, optionally snapshotting deeply\n *\n * @param {SingulumStore} store\n * @param {Singulum} $$store\n * @param {boolean} snapshotBranches\n * @returns {Object}\n */\nfunction SingulumSnapshot() {\n    var store = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var _this3 = this;\n\n    var $$store = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var snapshotBranches = arguments[2];\n\n    _classCallCheck(this, SingulumSnapshot);\n\n    (0, _utils.forEachObject)(store, function (value, key) {\n        var $$value = $$store[key];\n\n        _this3[key] = (0, _utils.isInstanceOf)($$value, Singulum) && snapshotBranches ? new SingulumSnapshot($$value.store, $$value.$$store, snapshotBranches) : (0, _utils.getClone)($$value, SingulumStore);\n    });\n\n    return this;\n};\n\n/**\n * Main class\n */\n\n\nvar Singulum =\n/**\n * Create singulum infrastructure, and populate leaves provided\n *\n * @param {Object} actions\n * @param {Object} initialValues\n * @returns {Singulum}\n */\nfunction Singulum() {\n    var actions = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var initialValues = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, Singulum);\n\n    (0, _utils.setHidden)(this, '$$actions', []);\n    (0, _utils.setHidden)(this, '$$initialValues', {});\n    (0, _utils.setHidden)(this, '$$watcher', null);\n    (0, _utils.setHidden)(this, '$$snapshots', {});\n    (0, _utils.setHidden)(this, '$$store', {});\n\n    createNewSingulumLeaves(this, actions, initialValues);\n\n    return this;\n};\n\n/**\n * prototype of Singulum class\n *\n * @type {Object}\n */\n\n\nSingulum.prototype = Object.create({\n    /**\n     * Get immutable version of actions\n     *\n     * @returns {SingulumActions}\n     */\n    get actions() {\n        return new SingulumActions(this.$$actions);\n    },\n\n    /**\n     * Get immutable version of store\n     *\n     * @returns {SingulumStore}\n     */\n    get store() {\n        return new SingulumStore(this.$$store);\n    },\n\n    /**\n     * Create namespaced Singulum child\n     *\n     * @param {Object} actions\n     * @param {Object} initialValues\n     * @param {string} namespace\n     * @returns {Singulum}\n     */\n    branch: function branch() {\n        var actions = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var initialValues = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n        var namespace = arguments[2];\n\n        /**\n         * if a namespace is provided but it isn't a string value, make it one\n         */\n        if (namespace && !(0, _utils.isString)(namespace)) {\n            namespace = namespace.toString();\n        }\n\n        return createNewSingulumNamespace(this, namespace, actions, initialValues);\n    },\n\n\n    /**\n     * Return singulum to its original state\n     *\n     * @param {boolean} resetBranches\n     * @returns {Singulum}\n     */\n    reset: function reset() {\n        var _this4 = this;\n\n        var resetBranches = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\n        (0, _utils.forEachObject)(this.$$store, function (value, key) {\n            if ((0, _utils.isInstanceOf)(value, Singulum) && resetBranches) {\n                /**\n                 * if snapshot value is a Singulum and you want to reset child branches, then trigger\n                 * .reset() on child branch\n                 */\n                value.reset();\n            } else if (!(0, _utils.isInstanceOf)(value, SingulumSnapshot)) {\n                /**\n                 * If the snapshot value is a non-Singulum value, re-apply it to the store\n                 */\n                _this4.$$store[key] = _this4.$$initialValues[key];\n            }\n        });\n\n        /**\n         * If there is a watcher, fire it\n         */\n        if ((0, _utils.isFunction)(this.$$watcher)) {\n            this.$$watcher(this.store);\n        }\n\n        return this;\n    },\n\n\n    /**\n     * Restore values in store based on snapshot, optionally restored deeply\n     *\n     * @param {SingulumSnapshot} snapshot\n     * @param {boolean} restoreBranches\n     * @returns {Singulum}\n     */\n    restore: function restore(snapshot) {\n        var _this5 = this;\n\n        var restoreBranches = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n        /**\n         * Make sure snapshot passed is a SingulumSnapshot\n         */\n        if (!(0, _utils.isInstanceOf)(snapshot, SingulumSnapshot)) {\n            (0, _utils.throwError)('Snapshot used in restore method must be a SingulumSnapshot.');\n        }\n\n        (0, _utils.forEachObject)(snapshot, function (value, key) {\n            if ((0, _utils.isInstanceOf)(value, SingulumSnapshot) && restoreBranches) {\n                /**\n                 * if the snapshot value is a SingulumSnapshot and you want to reset\n                 * child branches, then trigger restore on the child branch passing value\n                 * as branch's snapshot\n                 */\n                _this5.$$store[key].restore(value, restoreBranches);\n            } else if (!(0, _utils.isInstanceOf)(value, SingulumStore)) {\n                /**\n                 * If the snapshot value is not a Singulum, re-apply it to the store\n                 */\n                _this5.$$store[key] = value;\n            }\n        });\n\n        /**\n         * If there is a watcher, fire it\n         */\n        if ((0, _utils.isFunction)(this.$$watcher)) {\n            this.$$watcher(this.store);\n        }\n\n        return this;\n    },\n\n\n    /**\n     * Create snapshot of current store state, optionally snapshot deeply\n     *\n     * @param {boolean} snapshotBranches\n     * @returns {SingulumSnapshot}\n     */\n    snapshot: function snapshot() {\n        var snapshotBranches = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\n        return new SingulumSnapshot(this.store, this.$$store, snapshotBranches);\n    },\n\n\n    /**\n     * Clear out callback bound to $$watcher\n     *\n     * @returns {Singulum}\n     */\n    unwatch: function unwatch() {\n        this.$$watcher = null;\n\n        return this;\n    },\n\n\n    /**\n     * Add callback to $$watcher, to be fired whenever store updates\n     *\n     * @param {Function} callback\n     * @returns {Singulum}\n     */\n    watch: function watch(callback) {\n        /**\n         * Make sure callback is actually a function before setting it\n         */\n        if ((0, _utils.isFunction)(callback)) {\n            this.$$watcher = callback;\n        }\n\n        return this;\n    }\n});\n\nexports.default = Singulum;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar TO_STRING = Object.prototype.toString;\n\n/**\n * Binds function to thisArg\n *\n * @param {Function} fn\n * @param {Object} thisArg\n * @returns {Function}\n */\nvar bindFunction = exports.bindFunction = function bindFunction(fn, thisArg) {\n    return function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return fn.apply(thisArg, args);\n    };\n};\n\n/**\n * Provided as faster alternative for native .forEach\n *\n * @param {Array} array\n * @param {Function} fn\n */\nvar forEachObject = exports.forEachObject = function forEachObject(object, fn) {\n    var keysArray = Object.keys(object);\n\n    for (var index = 0, length = keysArray.length; index < length; index++) {\n        var key = keysArray[index];\n\n        fn(object[key], key, object);\n    }\n};\n\n/**\n * Determines if object is of type Array\n *\n * @param {*} object\n * @returns {boolean}\n */\nvar isArray = function isArray(object) {\n    return TO_STRING.call(object) === '[object Array]';\n};\n\n/**\n * Determines if object is of type Date\n * Not exported because not used elsewhere\n *\n * @param {*} object\n * @returns {boolean}\n */\nvar isDate = function isDate(object) {\n    return TO_STRING.call(object) === '[object Date]';\n};\n\n/**\n * Determines if object is of type Function\n *\n * @param {*} object\n * @returns {boolean}\n */\nvar isFunction = exports.isFunction = function isFunction(object) {\n    return TO_STRING.call(object) === '[object Function]' || typeof object === 'function';\n};\n\n/**\n * Determine if object is instance of Constructor\n *\n * @param {*} object\n * @param {Function} Constructor\n * @returns {boolean}\n */\nvar isInstanceOf = exports.isInstanceOf = function isInstanceOf(object, Constructor) {\n    return object instanceof Constructor;\n};\n\n/**\n * Determines if object is of type Object\n *\n * @param {*} object\n * @returns {boolean}\n */\nvar isObject = exports.isObject = function isObject(object) {\n    return TO_STRING.call(object) === '[object Object]' && !!object;\n};\n\n/**\n * Determines if object is of type String\n *\n * @param {*} object\n * @returns {boolean}\n */\nvar isString = exports.isString = function isString(object) {\n    return TO_STRING.call(object) === '[object String]';\n};\n\n/**\n * Returns clone of Singulum object with metadata stripped and child\n * stores with SingulumStore class applied\n *\n * @param {*} object\n * @param {SingulumStore} SingulumStore\n * @returns {*}\n */\nvar getClone = exports.getClone = function getClone(object, SingulumStore) {\n    if (isArray(object)) {\n        return object.map(function (item) {\n            return getClone(item, SingulumStore);\n        });\n    }\n\n    if (isObject(object)) {\n        var _ret = function () {\n            var cloneObject = {};\n\n            forEachObject(object, function (value, key) {\n                cloneObject[key] = getClone(value, SingulumStore);\n            });\n\n            if (isInstanceOf(object, SingulumStore)) {\n                cloneObject = new SingulumStore(cloneObject);\n            }\n\n            return {\n                v: cloneObject\n            };\n        }();\n\n        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    if (isDate(object)) {\n        return new Date(object.valueOf());\n    }\n\n    return object;\n};\n\n/**\n * Set property to be non-enumerable\n *\n * @param {Object} object\n * @param {string} property\n * @param {*} value\n */\nvar setHidden = exports.setHidden = function setHidden(object, property, value) {\n    Object.defineProperty(object, property, {\n        configurable: true,\n        enumerable: false,\n        value: value,\n        writable: true\n    });\n};\n\n/**\n * Set property on object as getter only, making it immutable\n *\n * @param {Object} object\n * @param {string} property\n * @param {*} value\n */\nvar setReadonly = exports.setReadonly = function setReadonly(object, property, value) {\n    Object.defineProperty(object, property, {\n        get: function get() {\n            return value;\n        },\n        set: function set() {\n            throwError('Cannot set a value for ' + property + ', as it is immutable.');\n        }\n    });\n};\n\n/**\n * Consolidated error throwing function, mainly for minification benefits\n *\n * @param {string} error\n */\nvar throwError = exports.throwError = function throwError(error) {\n    throw new Error(error);\n};\n\nexports.default = {\n    bindFunction: bindFunction,\n    forEachObject: forEachObject,\n    getClone: getClone,\n    isFunction: isFunction,\n    isInstanceOf: isInstanceOf,\n    isObject: isObject,\n    isString: isString,\n    setHidden: setHidden,\n    setReadonly: setReadonly,\n    throwError: throwError\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvdXRpbHMuanM/MmI0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBUT19TVFJJTkcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4vKipcbiAqIEJpbmRzIGZ1bmN0aW9uIHRvIHRoaXNBcmdcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICogQHBhcmFtIHtPYmplY3R9IHRoaXNBcmdcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xuZXhwb3J0IGNvbnN0IGJpbmRGdW5jdGlvbiA9IChmbiwgdGhpc0FyZykgPT4ge1xuICAgIHJldHVybiBmdW5jdGlvbiguLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiBmbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICB9O1xufTtcblxuLyoqXG4gKiBQcm92aWRlZCBhcyBmYXN0ZXIgYWx0ZXJuYXRpdmUgZm9yIG5hdGl2ZSAuZm9yRWFjaFxuICpcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICovXG5leHBvcnQgY29uc3QgZm9yRWFjaE9iamVjdCA9IChvYmplY3QsIGZuKSA9PiB7XG4gICAgY29uc3Qga2V5c0FycmF5ID0gT2JqZWN0LmtleXMob2JqZWN0KTtcblxuICAgIGZvciAobGV0IGluZGV4ID0gMCwgbGVuZ3RoID0ga2V5c0FycmF5Lmxlbmd0aDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgY29uc3Qga2V5ID0ga2V5c0FycmF5W2luZGV4XTtcblxuICAgICAgICBmbihvYmplY3Rba2V5XSwga2V5LCBvYmplY3QpO1xuICAgIH1cbn07XG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiBvYmplY3QgaXMgb2YgdHlwZSBBcnJheVxuICpcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuY29uc3QgaXNBcnJheSA9IChvYmplY3QpID0+IHtcbiAgICByZXR1cm4gVE9fU1RSSU5HLmNhbGwob2JqZWN0KSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiBvYmplY3QgaXMgb2YgdHlwZSBEYXRlXG4gKiBOb3QgZXhwb3J0ZWQgYmVjYXVzZSBub3QgdXNlZCBlbHNld2hlcmVcbiAqXG4gKiBAcGFyYW0geyp9IG9iamVjdFxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmNvbnN0IGlzRGF0ZSA9IChvYmplY3QpID0+IHtcbiAgICByZXR1cm4gVE9fU1RSSU5HLmNhbGwob2JqZWN0KSA9PT0gJ1tvYmplY3QgRGF0ZV0nO1xufTtcblxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIG9iamVjdCBpcyBvZiB0eXBlIEZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHsqfSBvYmplY3RcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5leHBvcnQgY29uc3QgaXNGdW5jdGlvbiA9IChvYmplY3QpID0+IHtcbiAgICByZXR1cm4gVE9fU1RSSU5HLmNhbGwob2JqZWN0KSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJyB8fCB0eXBlb2Ygb2JqZWN0ID09PSAnZnVuY3Rpb24nO1xufTtcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgb2JqZWN0IGlzIGluc3RhbmNlIG9mIENvbnN0cnVjdG9yXG4gKlxuICogQHBhcmFtIHsqfSBvYmplY3RcbiAqIEBwYXJhbSB7RnVuY3Rpb259IENvbnN0cnVjdG9yXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzSW5zdGFuY2VPZiA9IChvYmplY3QsIENvbnN0cnVjdG9yKSA9PiB7XG4gICAgcmV0dXJuIG9iamVjdCBpbnN0YW5jZW9mIENvbnN0cnVjdG9yO1xufTtcblxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIG9iamVjdCBpcyBvZiB0eXBlIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzT2JqZWN0ID0gKG9iamVjdCkgPT4ge1xuICAgIHJldHVybiBUT19TVFJJTkcuY2FsbChvYmplY3QpID09PSAnW29iamVjdCBPYmplY3RdJyAmJiAhIW9iamVjdDtcbn07XG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiBvYmplY3QgaXMgb2YgdHlwZSBTdHJpbmdcbiAqXG4gKiBAcGFyYW0geyp9IG9iamVjdFxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCBpc1N0cmluZyA9IChvYmplY3QpID0+IHtcbiAgICByZXR1cm4gVE9fU1RSSU5HLmNhbGwob2JqZWN0KSA9PT0gJ1tvYmplY3QgU3RyaW5nXSc7XG59O1xuXG4vKipcbiAqIFJldHVybnMgY2xvbmUgb2YgU2luZ3VsdW0gb2JqZWN0IHdpdGggbWV0YWRhdGEgc3RyaXBwZWQgYW5kIGNoaWxkXG4gKiBzdG9yZXMgd2l0aCBTaW5ndWx1bVN0b3JlIGNsYXNzIGFwcGxpZWRcbiAqXG4gKiBAcGFyYW0geyp9IG9iamVjdFxuICogQHBhcmFtIHtTaW5ndWx1bVN0b3JlfSBTaW5ndWx1bVN0b3JlXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuZXhwb3J0IGNvbnN0IGdldENsb25lID0gKG9iamVjdCwgU2luZ3VsdW1TdG9yZSkgPT4ge1xuICAgIGlmIChpc0FycmF5KG9iamVjdCkpIHtcbiAgICAgICAgcmV0dXJuIG9iamVjdC5tYXAoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBnZXRDbG9uZShpdGVtLCBTaW5ndWx1bVN0b3JlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKGlzT2JqZWN0KG9iamVjdCkpIHtcbiAgICAgICAgbGV0IGNsb25lT2JqZWN0ID0ge307XG5cbiAgICAgICAgZm9yRWFjaE9iamVjdChvYmplY3QsICh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICBjbG9uZU9iamVjdFtrZXldID0gZ2V0Q2xvbmUodmFsdWUsIFNpbmd1bHVtU3RvcmUpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoaXNJbnN0YW5jZU9mKG9iamVjdCwgU2luZ3VsdW1TdG9yZSkpIHtcbiAgICAgICAgICAgIGNsb25lT2JqZWN0ID0gbmV3IFNpbmd1bHVtU3RvcmUoY2xvbmVPYmplY3QpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNsb25lT2JqZWN0O1xuICAgIH1cblxuICAgIGlmIChpc0RhdGUob2JqZWN0KSkge1xuICAgICAgICByZXR1cm4gbmV3IERhdGUob2JqZWN0LnZhbHVlT2YoKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG9iamVjdDtcbn07XG5cbi8qKlxuICogU2V0IHByb3BlcnR5IHRvIGJlIG5vbi1lbnVtZXJhYmxlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdFxuICogQHBhcmFtIHtzdHJpbmd9IHByb3BlcnR5XG4gKiBAcGFyYW0geyp9IHZhbHVlXG4gKi9cbmV4cG9ydCBjb25zdCBzZXRIaWRkZW4gPSAob2JqZWN0LCBwcm9wZXJ0eSwgdmFsdWUpID0+IHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBwcm9wZXJ0eSwge1xuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICB2YWx1ZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbn07XG5cbi8qKlxuICogU2V0IHByb3BlcnR5IG9uIG9iamVjdCBhcyBnZXR0ZXIgb25seSwgbWFraW5nIGl0IGltbXV0YWJsZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3RcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wZXJ0eVxuICogQHBhcmFtIHsqfSB2YWx1ZVxuICovXG5leHBvcnQgY29uc3Qgc2V0UmVhZG9ubHkgPSAob2JqZWN0LCBwcm9wZXJ0eSwgdmFsdWUpID0+IHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBwcm9wZXJ0eSwge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgIHNldCgpIHtcbiAgICAgICAgICAgIHRocm93RXJyb3IoYENhbm5vdCBzZXQgYSB2YWx1ZSBmb3IgJHtwcm9wZXJ0eX0sIGFzIGl0IGlzIGltbXV0YWJsZS5gKTtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcblxuLyoqXG4gKiBDb25zb2xpZGF0ZWQgZXJyb3IgdGhyb3dpbmcgZnVuY3Rpb24sIG1haW5seSBmb3IgbWluaWZpY2F0aW9uIGJlbmVmaXRzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGVycm9yXG4gKi9cbmV4cG9ydCBjb25zdCB0aHJvd0Vycm9yID0gKGVycm9yKSA9PiB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBiaW5kRnVuY3Rpb24sXG4gICAgZm9yRWFjaE9iamVjdCxcbiAgICBnZXRDbG9uZSxcbiAgICBpc0Z1bmN0aW9uLFxuICAgIGlzSW5zdGFuY2VPZixcbiAgICBpc09iamVjdCxcbiAgICBpc1N0cmluZyxcbiAgICBzZXRIaWRkZW4sXG4gICAgc2V0UmVhZG9ubHksXG4gICAgdGhyb3dFcnJvclxufTtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvdXRpbHMuanNcbiAqKi8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBO0FBQUE7O0FBQUE7QUFDQTtBQUFBO0FBREE7QUFEQTtBQUNBOzs7Ozs7O0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUhBO0FBQ0E7Ozs7Ozs7QUFlQTtBQUNBO0FBREE7QUFDQTs7Ozs7Ozs7QUFVQTtBQUNBO0FBREE7QUFDQTs7Ozs7OztBQVNBO0FBQ0E7QUFEQTtBQUNBOzs7Ozs7OztBQVVBO0FBQ0E7QUFEQTtBQUNBOzs7Ozs7O0FBU0E7QUFDQTtBQURBO0FBQ0E7Ozs7Ozs7QUFTQTtBQUNBO0FBREE7QUFDQTs7Ozs7Ozs7O0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQURBO0FBQ0E7QUFLQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFHQTtBQUNBO0FBREE7QUFDQTtBQUdBO0FBQUE7QUFBQTtBQVhBO0FBQ0E7O0FBREE7QUFDQTtBQWFBO0FBQ0E7QUFEQTtBQUNBO0FBR0E7QUF6QkE7QUFDQTs7Ozs7Ozs7QUFrQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFEQTtBQUNBOzs7Ozs7OztBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBTEE7QUFBQTtBQURBO0FBQ0E7Ozs7OztBQWVBO0FBQ0E7QUFEQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }
/******/ ])
});
;