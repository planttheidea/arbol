/*!
 * Library: singulum
 * Description: State management sanity with minimal effort
 * Author: planttheidea
 * Version: 0.7.0
 * License: MIT
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("singulum", [], factory);
	else if(typeof exports === 'object')
		exports["singulum"] = factory();
	else
		root["singulum"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Singulum = __webpack_require__(2);\n\nvar _Singulum2 = _interopRequireDefault(_Singulum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = new _Singulum2.default();\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvaW5kZXguanM/MWZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2luZ3VsdW0gZnJvbSAnLi9TaW5ndWx1bSc7XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBTaW5ndWx1bSgpO1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9pbmRleC5qc1xuICoqLyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = __webpack_require__(3);\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar OBJECT_FREEZE = Object.freeze;\n\n/**\n * This is a basic counter in case a namespace is not provided when creating\n * a branch\n */\nvar namespaceIncrementer = 0;\n\n/**\n *\n * @param {Singulum} singulum\n */\nvar fireWatchers = function fireWatchers(singulum) {\n  singulum.$$watchers.forEach(function (watcher) {\n    watcher(singulum.store);\n  });\n};\n\n/**\n * Assigns new result to store, fires listener with new SingulumStore, and returns\n * Promise with new result\n *\n * @param {Singulum} singulum\n * @param {string} key\n * @param {*} result\n * @returns {Promise}\n */\nvar updateStoreValue = function updateStoreValue(singulum, result, key) {\n  /**\n   * Apply new result value to the store, scoped if the key is provided\n   */\n  if (key) {\n    singulum.$$store[key] = result;\n  } else {\n    singulum.$$store = result;\n  }\n\n  /**\n   * If there is a watcher, fire it\n   */\n  fireWatchers(singulum);\n\n  return result;\n};\n\n/**\n * Creates bound and wrapped function to store new value internally and invoke listener\n * If function is asyncronous, it waits for the promise to be resolved before firing\n *\n * @param {Singulum} singulum\n * @param {Function} fn\n * @param {string} key\n * @return {Function}\n */\nvar createWrapperFunction = function createWrapperFunction(singulum, fn, key) {\n  /**\n   * @note must be a standard function instead of an arrow function, to allow the this binding\n   */\n  return (0, _utils.bindFunction)(function () {\n    var _this = this;\n\n    var primaryArgument = key ? singulum.$$store[key] : singulum.$$store;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var result = fn.apply(undefined, [primaryArgument].concat(args));\n\n    /**\n     * If the result is a Promise, wait for resolution and then return the data\n     */\n    if ((0, _utils.isFunction)(result.then)) {\n      return result.then(function (resultValue) {\n        return updateStoreValue(_this, resultValue, key);\n      });\n    }\n\n    /**\n     * Otherwise, wrap the return data in a native Promise and return it\n     */\n    return Promise.resolve(updateStoreValue(this, result, key));\n  }, singulum);\n};\n\n/**\n * Creates namespaced Singulum within the object, aka make a branch\n *\n * @param {Singulum} singulum\n * @param {string} namespace\n * @param {Object} actions\n * @param {Object} initialValues\n * @returns {Object}\n */\nvar createNewSingulumNamespace = function createNewSingulumNamespace(singulum, namespace) {\n  var actions = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n  var initialValues = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n  /**\n   * if no namespace is provided, use the simple counter to create a unique entry\n   */\n  if (!namespace) {\n    namespace = namespaceIncrementer;\n    namespaceIncrementer++;\n  }\n\n  (0, _utils.setReadonly)(singulum, namespace, new Singulum(actions, initialValues));\n\n  singulum.$$store[namespace] = singulum[namespace];\n\n  return singulum[namespace];\n};\n\n/**\n * Creates new item in the store, and creates related action with wrapper\n *\n * @param {Singulum} singulum\n * @param {Object} actions\n * @param {Object} initialValues\n */\nvar createNewSingulumLeaves = function createNewSingulumLeaves(singulum) {\n  var actions = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var initialValues = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n  (0, _utils.forEachObject)(initialValues, function (initialValue, storeKey) {\n    /**\n     * Create separate clones for initialValues and store, so that references between\n     * the two do not exist\n     */\n    singulum.$$initialValues[storeKey] = (0, _utils.getClone)(initialValue, SingulumStore);\n    singulum.$$store[storeKey] = (0, _utils.getClone)(initialValue, SingulumStore);\n  });\n\n  (0, _utils.forEachObject)(actions, function (action, actionKey) {\n    /**\n     * if action is a function, then it applies to the entire state\n     */\n    if ((0, _utils.isFunction)(action)) {\n      singulum.$$actions[actionKey] = createWrapperFunction(singulum, action);\n    } else if ((0, _utils.isObject)(action)) {\n      /**\n       * if action is a map of functions, it applies to a specific key on the store\n       */\n      (0, _utils.forEachObject)(action, function (actionFn, actionFnKey) {\n        singulum.$$actions[actionFnKey] = createWrapperFunction(singulum, actionFn, actionKey);\n      });\n    }\n  });\n};\n\n/**\n * Gets clone of value from branch store based on key\n *\n * @param {Singulum} singulum\n * @param {string} key\n * @returns {*}\n */\nvar getLeaf = function getLeaf(singulum, key) {\n  return (0, _utils.getClone)(singulum.$$store[key], SingulumStore);\n};\n\n/**\n * Actions class provided with [branchName].actions\n */\n\nvar SingulumActions =\n/**\n * Create shallowly cloned and frozen object of internal actions, and freeze\n *\n * @param {Object} actions\n * @returns {Object}\n */\nfunction SingulumActions() {\n  var _this2 = this;\n\n  var actions = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  _classCallCheck(this, SingulumActions);\n\n  (0, _utils.forEachObject)(actions, function (value, key) {\n    _this2[key] = value;\n  });\n\n  OBJECT_FREEZE(this);\n\n  return this;\n};\n\n/**\n * Store class provided with [branchName].store\n */\n\n\nvar SingulumStore =\n/**\n * Create shallowly cloned and frozen object of store, including stores\n * branched from it\n *\n * @param {Object} store\n * @returns {Object}\n */\nfunction SingulumStore() {\n  var _this3 = this;\n\n  var store = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  _classCallCheck(this, SingulumStore);\n\n  (0, _utils.forEachObject)(store, function (value, key) {\n    _this3[key] = (0, _utils.isInstanceOf)(value, Singulum) ? value.store : value;\n  });\n\n  OBJECT_FREEZE(this);\n\n  return this;\n};\n\n/**\n * Snapshot class provided with [branchName].snapshot();\n */\n\n\nvar SingulumSnapshot =\n/**\n * Create snapshot clone of store, optionally snapshotting deeply\n *\n * @param {SingulumStore} store\n * @param {Singulum} $$store\n * @param {boolean} snapshotBranches\n * @returns {Object}\n */\nfunction SingulumSnapshot() {\n  var store = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  var _this4 = this;\n\n  var $$store = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var snapshotBranches = arguments[2];\n\n  _classCallCheck(this, SingulumSnapshot);\n\n  (0, _utils.forEachObject)(store, function (value, key) {\n    var $$value = $$store[key];\n\n    _this4[key] = (0, _utils.isInstanceOf)($$value, Singulum) && snapshotBranches ? new SingulumSnapshot($$value.store, $$value.$$store, snapshotBranches) : (0, _utils.getClone)($$value, SingulumStore);\n  });\n\n  return this;\n};\n\n/**\n * Main class\n */\n\n\nvar Singulum = function () {\n  /**\n   * Create singulum infrastructure, and populate leaves provided\n   *\n   * @param {Object} actions\n   * @param {Object} initialValues\n   * @returns {Singulum}\n   */\n\n  function Singulum() {\n    var actions = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var initialValues = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, Singulum);\n\n    (0, _utils.setHidden)(this, '$$actions', []);\n    (0, _utils.setHidden)(this, '$$initialValues', {});\n    (0, _utils.setHidden)(this, '$$watchers', []);\n    (0, _utils.setHidden)(this, '$$snapshots', {});\n    (0, _utils.setHidden)(this, '$$store', {});\n\n    createNewSingulumLeaves(this, actions, initialValues);\n\n    return this;\n  }\n\n  /**\n   * Get immutable version of actions\n   *\n   * @returns {SingulumActions}\n   */\n\n\n  _createClass(Singulum, [{\n    key: 'branch',\n\n\n    /**\n     * Create namespaced Singulum child\n     *\n     * @param {Object} actions\n     * @param {Object} initialValues\n     * @param {string} namespace\n     * @returns {Singulum}\n     */\n    value: function branch() {\n      var actions = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n      var initialValues = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n      var namespace = arguments[2];\n\n      /**\n       * if a namespace is provided but it isn't a string value, make it one\n       */\n      if (namespace && !(0, _utils.isString)(namespace)) {\n        namespace = namespace.toString();\n      }\n\n      return createNewSingulumNamespace(this, namespace, actions, initialValues);\n    }\n\n    /**\n     * Determine if object passed is equal in value to the branch\n     * If key is passed, performs value equality check on branch[key] only\n     *\n     * @param {*} object\n     * @param {string} key\n     * @returns {*}\n     */\n\n  }, {\n    key: 'equals',\n    value: function equals(object, key) {\n      if (key) {\n        return (0, _utils.isEqual)(this.$$store[key], object[key]);\n      }\n\n      return (0, _utils.isEqual)(this.$$store, object);\n    }\n  }, {\n    key: 'hashCode',\n    value: function hashCode(key) {\n      if (key) {\n        return (0, _utils.hashCode)(this.$$store[key]);\n      }\n\n      return (0, _utils.hashCode)(this.$$store);\n    }\n\n    /**\n     * Based on key or array of keys, returns values in store associated\n     * If leaves is an array, an array of values in the same order as keys passed\n     * is returned\n     *\n     * @param {string|Array} leaves\n     * @returns {*}\n     */\n\n  }, {\n    key: 'pluck',\n    value: function pluck(leaves) {\n      var _this5 = this;\n\n      /**\n       * if nothing is passed, just return the store\n       */\n      if (!leaves) {\n        return this.store;\n      }\n\n      /**\n       * if its a single key, get the leaf\n       */\n      if ((0, _utils.isString)(leaves)) {\n        return getLeaf(this, leaves);\n      }\n\n      /**\n       * if its an array of keys, get all the leaves\n       */\n      if ((0, _utils.isArray)(leaves)) {\n        return leaves.map(function (leaf) {\n          return getLeaf(_this5, leaf);\n        });\n      }\n    }\n\n    /**\n     * Return singulum to its original state\n     *\n     * @param {boolean} resetBranches\n     * @returns {Singulum}\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      var _this6 = this;\n\n      var resetBranches = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\n      var newStore = {};\n\n      (0, _utils.forEachObject)(this.$$store, function (value, key) {\n        if ((0, _utils.isInstanceOf)(value, Singulum) && resetBranches) {\n          /**\n           * if snapshot value is a Singulum and you want to reset child branches, then trigger\n           * .reset() on child branch\n           */\n          value.reset();\n        } else if (!(0, _utils.isInstanceOf)(value, SingulumSnapshot)) {\n          /**\n           * If the snapshot value is a non-Singulum value, re-apply it to the store\n           */\n          newStore[key] = _this6.$$initialValues[key];\n        }\n      });\n\n      this.$$store = newStore;\n\n      /**\n       * If there is a watcher, fire it\n       */\n      fireWatchers(this);\n\n      return this;\n    }\n\n    /**\n     * Restore values in store based on snapshot, optionally restored deeply\n     *\n     * @param {SingulumSnapshot} snapshot\n     * @param {boolean} restoreBranches\n     * @returns {Singulum}\n     */\n\n  }, {\n    key: 'restore',\n    value: function restore(snapshot) {\n      var _this7 = this;\n\n      var restoreBranches = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n      /**\n       * Make sure snapshot passed is a SingulumSnapshot\n       */\n      if (!(0, _utils.isInstanceOf)(snapshot, SingulumSnapshot)) {\n        (0, _utils.throwError)('Snapshot used in restore method must be a SingulumSnapshot.');\n      }\n\n      (0, _utils.forEachObject)(snapshot, function (value, key) {\n        if ((0, _utils.isInstanceOf)(value, SingulumSnapshot) && restoreBranches) {\n          /**\n           * if the snapshot value is a SingulumSnapshot and you want to reset\n           * child branches, then trigger restore on the child branch passing value\n           * as branch's snapshot\n           */\n          _this7.$$store[key].restore(value, restoreBranches);\n        } else if (!(0, _utils.isInstanceOf)(value, SingulumStore)) {\n          /**\n           * If the snapshot value is not a Singulum, re-apply it to the store\n           */\n          _this7.$$store[key] = value;\n        }\n      });\n\n      /**\n       * If there is a watcher, fire it\n       */\n      fireWatchers(this);\n\n      return this;\n    }\n\n    /**\n     * Create snapshot of current store state, optionally snapshot deeply\n     *\n     * @param {boolean} snapshotBranches\n     * @returns {SingulumSnapshot}\n     */\n\n  }, {\n    key: 'snapshot',\n    value: function snapshot() {\n      var snapshotBranches = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\n      return new SingulumSnapshot(this.store, this.$$store, snapshotBranches);\n    }\n\n    /**\n     * Clear out callback bound to $$watchers\n     *\n     * @returns {Singulum}\n     */\n\n  }, {\n    key: 'unwatch',\n    value: function unwatch(callback) {\n      var watcherIndex = (0, _utils.findIndex)(this.$$watchers, function (watcher) {\n        return watcher === callback;\n      });\n\n      this.$$watchers = [].concat(_toConsumableArray(this.$$watchers.slice(0, watcherIndex)), _toConsumableArray(this.$$watchers.slice(watcherIndex + 1, this.$$watchers.length)));\n\n      return this;\n    }\n\n    /**\n     * Add callback to $$watchers, to be fired whenever store updates\n     *\n     * @param {Function} callback\n     * @returns {Singulum}\n     */\n\n  }, {\n    key: 'watch',\n    value: function watch(callback) {\n      /**\n       * Make sure callback is actually a function before setting it\n       */\n      if ((0, _utils.isFunction)(callback)) {\n        this.$$watchers = [].concat(_toConsumableArray(this.$$watchers), [callback]);\n      }\n\n      return this;\n    }\n  }, {\n    key: 'actions',\n    get: function get() {\n      return new SingulumActions(this.$$actions);\n    }\n\n    /**\n     * Get immutable version of store\n     *\n     * @returns {SingulumStore}\n     */\n\n  }, {\n    key: 'store',\n    get: function get() {\n      return new SingulumStore(this.$$store);\n    }\n  }]);\n\n  return Singulum;\n}();\n\nexports.default = Singulum;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar TO_STRING = Object.prototype.toString;\n\n/**\n * Binds function to thisArg\n *\n * @param {Function} fn\n * @param {Object} thisArg\n * @returns {Function}\n */\nvar bindFunction = exports.bindFunction = function bindFunction(fn, thisArg) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return fn.apply(thisArg, args);\n  };\n};\n\n/**\n * Finds the index in the array where the callback returns a truthy value\n *\n * @param {Array} array\n * @param {Function} callback\n * @returns {number}\n */\nvar findIndex = exports.findIndex = function findIndex(array, callback) {\n  for (var index = 0, length = array.length; index < length; index++) {\n    if (callback(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Provided as faster alternative for native .forEach\n *\n * @param {Object} object\n * @param {Function} fn\n */\nvar forEachObject = exports.forEachObject = function forEachObject(object, fn) {\n  var keysArray = Object.keys(object);\n\n  for (var index = 0, length = keysArray.length; index < length; index++) {\n    var key = keysArray[index];\n\n    fn(object[key], key, object);\n  }\n};\n\n/**\n * Returns clone of Singulum object with metadata stripped and child\n * stores with SingulumStore class applied\n *\n * @param {*} object\n * @param {SingulumStore} SingulumStore\n * @returns {*}\n */\nvar getClone = exports.getClone = function getClone(object, SingulumStore) {\n  if (isArray(object)) {\n    return object.map(function (item) {\n      return getClone(item, SingulumStore);\n    });\n  }\n\n  if (isObject(object)) {\n    var _ret = function () {\n      var cloneObject = {};\n\n      forEachObject(object, function (value, key) {\n        cloneObject[key] = getClone(value, SingulumStore);\n      });\n\n      if (isInstanceOf(object, SingulumStore)) {\n        cloneObject = new SingulumStore(cloneObject);\n      }\n\n      return {\n        v: cloneObject\n      };\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  }\n\n  if (isDate(object)) {\n    return new Date(object.valueOf());\n  }\n\n  return object;\n};\n\n/**\n * Build integer hashCode from object\n *\n * @param {*} object\n * @returns {number}\n */\nvar hashCode = exports.hashCode = function hashCode(object) {\n  var serializedObject = serialize(object);\n\n  if (serializedObject === '') {\n    return 0;\n  }\n\n  var hashCode = 0,\n      char = undefined;\n\n  for (var index = 0, length = serializedObject.length; index < length; index++) {\n    char = serializedObject.charCodeAt(index);\n    hashCode = (hashCode << 5) - hashCode + char;\n    hashCode |= 0;\n  }\n\n  return hashCode;\n};\n\n/**\n * Determines if object is of type Array\n *\n * @param {*} object\n * @returns {boolean}\n */\nvar isArray = exports.isArray = function isArray(object) {\n  return TO_STRING.call(object) === '[object Array]';\n};\n\n/**\n * Determines if object is of type Date\n * Not exported because not used elsewhere\n *\n * @param {*} object\n * @returns {boolean}\n */\nvar isDate = function isDate(object) {\n  return TO_STRING.call(object) === '[object Date]';\n};\n\n/**\n * Determines if the two objects have equal values (checks deeply)\n *\n * @param {*} object1\n * @param {*} object2\n * @returns {*}\n */\nvar isEqual = exports.isEqual = function isEqual(object1, object2) {\n  return hashCode(object1) === hashCode(object2);\n};\n\n/**\n * Determines if object is of type Function\n *\n * @param {*} object\n * @returns {boolean}\n */\nvar isFunction = exports.isFunction = function isFunction(object) {\n  return TO_STRING.call(object) === '[object Function]' || typeof object === 'function';\n};\n\n/**\n * Determine if object is instance of Constructor\n *\n * @param {*} object\n * @param {Function} Constructor\n * @returns {boolean}\n */\nvar isInstanceOf = exports.isInstanceOf = function isInstanceOf(object, Constructor) {\n  return object instanceof Constructor;\n};\n\n/**\n * Determines if object is of type Object\n *\n * @param {*} object\n * @returns {boolean}\n */\nvar isObject = exports.isObject = function isObject(object) {\n  return TO_STRING.call(object) === '[object Object]' && !!object;\n};\n\n/**\n * Determines if object is of type String\n *\n * @param {*} object\n * @returns {boolean}\n */\nvar isString = exports.isString = function isString(object) {\n  return TO_STRING.call(object) === '[object String]';\n};\n\n/**\n * Set property to be non-enumerable\n *\n * @param {Object} object\n * @param {string} property\n * @param {*} value\n */\nvar setHidden = exports.setHidden = function setHidden(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: true,\n    enumerable: false,\n    value: value,\n    writable: true\n  });\n};\n\n/**\n * Serialize object into string value, to be used for hashing\n *\n * @param {*} object\n * @returns {string}\n */\nvar serialize = function serialize(object) {\n  var type = typeof object === 'undefined' ? 'undefined' : _typeof(object);\n\n  var serializedCode = '';\n\n  if (type === 'object') {\n    for (var element in object) {\n      serializedCode += '{' + type + ':' + element + serialize(object[element]) + '}';\n    }\n  } else if (type === 'function') {\n    serializedCode += '{' + type + ':' + object.toString() + '}';\n  } else {\n    serializedCode += '{' + type + ':' + object + '}';\n  }\n\n  return serializedCode.replace(/\\s/g, '');\n};\n\n/**\n * Set property on object as getter only, making it immutable\n *\n * @param {Object} object\n * @param {string} property\n * @param {*} value\n */\nvar setReadonly = exports.setReadonly = function setReadonly(object, property, value) {\n  Object.defineProperty(object, property, {\n    get: function get() {\n      return value;\n    },\n    set: function set() {\n      throwError('Cannot set a value for ' + property + ', as it is immutable.');\n    }\n  });\n};\n\n/**\n * Consolidated error throwing function, mainly for minification benefits\n *\n * @param {string} error\n */\nvar throwError = exports.throwError = function throwError(error) {\n  throw new Error(error);\n};\n\nexports.default = {\n  bindFunction: bindFunction,\n  findIndex: findIndex,\n  forEachObject: forEachObject,\n  getClone: getClone,\n  hashCode: hashCode,\n  isArray: isArray,\n  isEqual: isEqual,\n  isFunction: isFunction,\n  isInstanceOf: isInstanceOf,\n  isObject: isObject,\n  isString: isString,\n  setHidden: setHidden,\n  setReadonly: setReadonly,\n  throwError: throwError\n};\n//# sourceMappingURL=data:application/json;base64,");

/***/ }
/******/ ])
});
;